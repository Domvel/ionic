@import "./segment";
@import "./segment.ios.vars";

// iOS Segment
// --------------------------------------------------

:host {
  --background: transparent;
  --background-checked: #{$segment-button-ios-background-color-checked};
  // --background-hover: #{$segment-button-ios-background-color-hover};
  // --background-activated: #{$segment-button-ios-background-color-activated};
  // --background-checked: #{$segment-button-ios-background-color-checked};
  // --color: #{$segment-button-ios-text-color};
  // --color-checked: #{$segment-button-ios-text-color-checked};
  // --border-color: #{$segment-button-ios-border-color};
  --indicator-color: transparent;
  --indicator-transition: #{$segment-button-ios-transition-animated};

  @include border-radius(8px);

  display: inline-flex;

  position: relative;

  background: #{$segment-ios-background-color};

  overflow: hidden;
}

:host(.segment-disabled) {
  opacity: $segment-button-ios-opacity-disabled;
}

@media (prefers-reduced-motion: reduce) {
  :host {
    --indicator-transition: none;
  }
}


// Segment: Color
// --------------------------------------------------

:host(.ion-color) {
  background: #{current-color(base, 0.065)};
  // color: #{current-color(base)};
}

:host(.ion-color)::slotted(ion-segment-button) {
  // --border-color: #{current-color(base)};

  // color: #{current-color(base)};
}

// :host(.ion-color)::slotted(.activated) {
//   background: #{current-color(base, .16)};
//   color: #{current-color(base)};
// }

// :host(.ion-color)::slotted(.segment-button-checked.activated),
:host(.ion-color)::slotted(.segment-button-checked) {
  // color: #{current-color(base)};
}

// :host(.ion-color)::slotted(.segment-button-disabled) {
//   color: #{current-color(base, $segment-ios-opacity-disabled)};
// }

// :host(.ion-color)::slotted(.segment-button-checked.segment-button-disabled) {
//   color: #{current-color(contrast, $segment-ios-opacity-disabled)};
// }

// @media (any-hover: hover) {
//   :host(.ion-color)::slotted(ion-segment-button:hover:not(.segment-button-checked)) {
//     background: #{current-color(base, .1)};
//   }
// }


// Segment: Default Toolbar
// --------------------------------------------------

:host-context(ion-toolbar) {
  width: auto;
}

// :host-context(ion-toolbar)::slotted(ion-segment-button) {
//   max-width: $segment-button-ios-toolbar-button-max-width;

//   font-size: $segment-button-ios-toolbar-font-size;

//   line-height: $segment-button-ios-toolbar-line-height;
// }

:host-context(ion-toolbar:not(.ion-color)):not(.ion-color) {
  background: #{var(--ion-toolbar-color-unchecked, $segment-ios-background-color)};
}

// :host-context(ion-toolbar:not(.ion-color)):not(.ion-color)::slotted(.segment-button-checked) {
//   background: #{var(--ion-toolbar-color-checked, var(--background-checked))};

//   color: #{var(--ion-toolbar-background, var(--color-checked))};
// }

// Segment: Color Toolbar
// --------------------------------------------------

:host-context(ion-toolbar.ion-color):not(.ion-color) {
  background: #{current-color(contrast, 0.11)};
}

:host-context(ion-toolbar.ion-color):not(.ion-color)::slotted(ion-segment-button) {
  // --color: #{current-color(contrast)};
  // --color-checked: #{current-color(base)};
  // --background-hover: #{current-color(contrast, $segment-button-ios-opacity-hover)};
  // --background-activated: #{current-color(contrast, $segment-button-ios-opacity-activated)};
  // --background-checked: #{current-color(contrast, 0.275)};
  // --border-color: #{current-color(contrast)};
}


// Segment: Checked Indicator
// --------------------------------------------------

.segment-checked-indicator {
  // TODO this should match the margin of the button
  @include padding(2px);
  @include position(0, 0, 0, 0);

  display: none;

  position: absolute;
}

.segment-checked-indicator-background {
  @include border-radius($segment-button-ios-border-radius);

  width: 100%;
  height: 100%;

  background: var(--background-checked);

  box-shadow: $segment-button-ios-box-shadow-checked;
}
